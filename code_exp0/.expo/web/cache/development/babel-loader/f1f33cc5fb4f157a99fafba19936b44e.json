{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Demo from \"./Demo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  function buttonPressed() {\n    console.log(\"You pressed me ouch!!!\");\n    setCount(count + 1);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: count\n    }), _jsx(Button, {\n      title: \"Press Me!\",\n      onPress: buttonPressed\n    }), _jsx(Text, {\n      style: styles.encouragingText,\n      children: \"Keep going!\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  encouragingText: {\n    marginTop: 50,\n    color: 'darkgrey'\n  }\n});","map":{"version":3,"names":["React","useState","Demo","App","count","setCount","buttonPressed","console","log","styles","container","encouragingText","StyleSheet","create","flex","justifyContent","alignItems","marginTop","color"],"sources":["/Users/karthik/reactnative/code_exp0/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport Demo from './Demo';\n\nexport default function App() {\n    // var counter = 0 - this is a regular variable. THIS WILL NOT WORK.\n    // we need to use STATE in order to update counter\n\n    // we are creating a state variable called count. \n    // theres also a fn called setCount which is how we update the count variable\n    let [count, setCount] = useState(0)\n\n    function buttonPressed() {\n      console.log(\"You pressed me ouch!!!\")\n      // counter = counter + 1\n      // console.log(count)\n      setCount(count + 1) // updates count variable w count + 1\n      // in jsx portion below, we can use { } to switch back to JS mode\n      // we are asking js to retrieve the value of count, and put it in the html text\n    }\n\n  return (\n    <View style={styles.container}>\n      <Text>{count}</Text>\n      <Button title=\"Press Me!\" onPress = {buttonPressed}></Button>\n      <Text style={styles.encouragingText}>Keep going!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  encouragingText: {\n    marginTop: 50,\n    color: 'darkgrey'\n  }\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,IAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAM1B,gBAAwBF,QAAQ,CAAC,CAAD,CAAhC;EAAA;EAAA,IAAKG,KAAL;EAAA,IAAYC,QAAZ;;EAEA,SAASC,aAAT,GAAyB;IACvBC,OAAO,CAACC,GAAR,CAAY,wBAAZ;IAGAH,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EAGD;;EAEH,OACE,MAAC,IAAD;IAAM,KAAK,EAAEK,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA,UAAON;IAAP,EADF,EAEE,KAAC,MAAD;MAAQ,KAAK,EAAC,WAAd;MAA0B,OAAO,EAAIE;IAArC,EAFF,EAGE,KAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACE,eAApB;MAAA;IAAA,EAHF;EAAA,EADF;AAOD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,cAAc,EAAE,QAFP;IAGTC,UAAU,EAAE;EAHH,CADoB;EAM/BL,eAAe,EAAE;IACfM,SAAS,EAAE,EADI;IAEfC,KAAK,EAAE;EAFQ;AANc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}